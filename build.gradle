group 'org.lunker'
version '1.0-SNAPSHOT'

apply plugin: 'java'



buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:2.9.0'
    }
}

apply plugin: 'org.hidetake.ssh'



remotes {
    webServer {
        host = '118.221.122.12'

    }
}


sourceCompatibility = 1.8

repositories {
    maven { url 'http://repo.spring.io/milestone' }
    mavenCentral()

    maven {
        url 'http://10.0.1.159:8081/repository/proxy-release/'
    }

    maven {
        url 'http://10.0.1.159:8081/repository/proxy-snapshot/'
    }
}

ext{
    akkaVersion="2.5.5"
    slf4jVersion = '1.7.21'
    log4j2Version = '2.5'
    commonsLogging = '1.2'
    nettyVersion='4.1.21.Final'
}

sourceSets {
    main {

        java {
            srcDirs "src/main/java"
        }

        resources {
            srcDirs "src/main/resources"
            include '**/*'
        }
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile('org.lunker:new-proxy:1.0.1')

    // SLF4J-Log4j2
    compile("commons-logging:commons-logging:${commonsLogging}")
    compile("org.slf4j:slf4j-api:${slf4jVersion}")
    compile("org.apache.logging.log4j:log4j-api:${log4j2Version}")
    compile("org.apache.logging.log4j:log4j-core:${log4j2Version}")
    compile("org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}")


    // https://mvnrepository.com/artifact/redis.clients/jedis
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpasyncclient
    compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.3'
}

jar {
    manifest {
        attributes  'Title': 'TestProxy', 'Version': 1.0, 'Main-Class': 'proxy.Application'
    }

    baseName 'test-proxy'
    dependsOn configurations.runtime
    from {
        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
    }
}


task deploy {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                put from: 'build/libs/test-proxy-1.0-SNAPSHOT.jar', into: '.'
//                execute 'sudo service tomcat restart'
            }
        }
    }
}
